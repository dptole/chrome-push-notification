<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
<script type="text/javascript" src="https://getbootstrap.com/dist/js/bootstrap.min.js"></script>
<script type="text/javascript" src="https://www.gstatic.com/firebasejs/3.9.0/firebase-app.js"></script>
<script type="text/javascript" src="https://www.gstatic.com/firebasejs/3.9.0/firebase-messaging.js"></script>

<script type="text/javascript">
var service_worker_path = '/chrome_push_notification/fcm/sw.js'
  , cpn_notify_button = $('.cpn-notify-button')
  , error_message = $('.cpn-error-message')
  , firebase_config = {
      apiKey: '{{ api_key }}',
      messagingSenderId: '{{ gcm_sender_id }}'
    }
;

firebase.initializeApp(firebase_config);
var messaging = firebase.messaging();

function registerServiceWorker(path) {
  return navigator.serviceWorker.getRegistrations().then(function(registrations) {
    var registered_sw = registrations.filter(function(registration) {
      return registration.active.scriptURL.endsWith(service_worker_path);
    });

    if(registered_sw.length > 0)
      return registered_sw[0];
    else
      return navigator.serviceWorker.register(service_worker_path);
  });
}

function ensureURL(url) {
  return /^https?:\/\//i.test(url) ? url : 'https://firebase.google.com/_static/images/firebase/touchicon-180.png';
}

function getRegistration() {
  return registerServiceWorker(service_worker_path);
}

function displayNotification(notification, registration) {
  if(notification.type === 'article') {
    const article = parseJSON(notification.article)
    if(article.success) {
      registration.showNotification(
        article.parsed.source,
        {
          body: [article.parsed.title, article.parsed.description].join(' | '),
          icon: ensureURL(article.parsed.urlToImage),
          tag: JSON.stringify({type: 'read-news', url: article.parsed.url}),
          actions: [{
            title: 'Read',
            action: JSON.stringify({type: 'read-news', url: article.parsed.url}),
            icon: 'https://cdn0.iconfinder.com/data/icons/solid-line-essential-ui-icon-set/512/essential_set_menu-32.png'
          }, {
            title: 'Next',
            action: JSON.stringify({type: 'next-news'}),
            icon: 'https://cdn3.iconfinder.com/data/icons/google-material-design-icons/48/ic_arrow_forward_48px-32.png'
          }]
        }
      )
    }
  }
}

function parseJSON(json_string) {
  try {
    return {
      success: true,
      parsed: JSON.parse(json_string)
    }
  } catch(error) {
    return {
      error
    }
  }
}

messaging.requestPermission().then(function() {
  return getRegistration();
}).then(function(service_worker) {
  return messaging.useServiceWorker(service_worker);
}).then(function() {
  return messaging.getToken();
}).then(function(token) {
  cpn_notify_button.text('Get news').removeClass('disabled');

  cpn_notify_button.on('click', function() {
    cpn_notify_button.text('Loading...').addClass('disabled');

    fetch('https://dptole.ngrok.io/chrome_push_notification/get_news?token=' + token).then(function() {
      cpn_notify_button.text('Get news').removeClass('disabled');
    });
  });
  
  messaging.onMessage(function(payload) {
    getRegistration().then(function(registration) {
      if(payload.data)
        displayNotification(payload.data, registration)
    })
  });
}).catch(function(error) {
  error_message
    .append($('<div>').append('An error occurred.'))
    .append($('<div>').append(error.message))
  ;
  cpn_notify_button.remove();
  console.log('An error occurred');
  console.log(error);
});
</script>
